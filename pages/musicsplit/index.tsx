import * as React from 'react';
import { NextPage } from 'next';
import NextLink from 'next/link';
import PageLayout from 'layouts/PageLayout';
import {
    Box, Button, Heading, SimpleGrid, Stack, Text,
    Link,
    Flex,
    Center,
    Image,
    Accordion,
    Card,
    CardBody,
    CardHeader
} from '@chakra-ui/react';
import Data from './page.json'
import useAppDownloader from 'hooks/useAppDownloader';
import Artistes from 'components/Artistes';
import WhyMusicSplit from 'components/WhyMusicSplit';
import Clearfix from 'components/Clearfix';
import FAQ from 'components/FAQ';

const featuredFaqs = [
    {
        q: 'What are Royalties?',
        a: 'Royalties are payments made from one party (sometimes referred to as the "licensee") to another (the" licensor") for the right to make use of an asset. The asset can be virtually anything -- from music to tangible assets like minerals and oil to intellectual property like copyrights, trademarks and patents. Royalty payments are often calculated as a percentage of the revenue generated by the asset\'s use.'
    },
    {
        q: 'How do I Get started?',
        a: 'The first step to purchasing on MusicSplit is downloading the ARTSPLIT app, signing up, and creating an account. After which, you browse the explore page and preview your favourite artists’ projects before placing a bid to buy splits.  '
    },
    {
        q: 'What happens if I win any splits of any music?',
        a: 'The project is added to your portfolio, and you will get your royalties depending on your split % ownership paid directly into your ARTSPLIT wallet. '
    },
    {
        q: 'Can I purchase from anywhere in the world?',
        a: 'Yes, anyone anywhere in the world may invest in MusicSplits listed on the ARTSPLIT app. You must download the ARTSPLIT app from your favourite app store on Google Play or iOS.'
    }
]

const MusicSplitPage: NextPage = () => {
    const { openApp } = useAppDownloader()

    return (
        <PageLayout title="MusicSplit" pre={false} clearFixed={false}>
            <Box as="section" bgColor="#FBF7F3" pt={[16, 16, 16]}>
                <Clearfix />

                <Flex as={SimpleGrid}
                    position="relative"
                    pb={[0, 0, 0, 0, 16]}
                    columns={[1, 1, 1, 1, 2]}
                    gap={[4, 4, 16]}
                    rowGap={[12]}
                    className="page-container"
                    flexDir={['column', 'column', 'column', 'column', 'row']}
                    alignItems="center"
                    minH={['auto', 'auto', 640]}
                >
                    <Box position="relative" zIndex={70}>
                        <Image
                            src="/music-split.svg"
                            alt="MusicSplit logo"
                            height={['44px', 74]}
                        />

                        <Flex as={Heading} fontSize={['4xl', '4xl', '5xl', '7xl']} mb={2}>
                            {/* <Text>MUSIC</Text>
                            <Text className="primary-gradient-text">SPLIT</Text> */}
                            <Heading color="primary" fontSize={['3xl', '5xl', '6xl', '6xl']}>
                                Invest in Music
                            </Heading>
                        </Flex>

                        <Heading
                            color="gray.600"
                            fontSize={['xl', 'xl', '3xl', '4xl']}
                            maxWidth={460}
                        >
                            Buy fractions of songs
                            that you enjoy and earn
                            music streaming income.
                        </Heading>

                        <Box mt={12}>
                            {/* <NextLink href="?join-waitlist" passHref>
                                <Button as={Link} size="lg">
                                    Join the waitlist
                                </Button>
                            </NextLink> */}
                            
                            <Button onClick={() => openApp()} size="lg">
                                Invest now
                            </Button>
                        </Box>
                    </Box>

                    <Box
                        position={['static', 'static', 'static', 'static', 'absolute']}
                        right={8}
                        bottom={0}
                    >
                        <Center>
                            <Image
                                src="/musicsplit-hero-image.png"
                                alt="MusicSplit collage"
                                maxH={[560, 560, 560, 780]}
                            />
                        </Center>
                    </Box>
                </Flex>
            </Box>

            <Box as="section" bgColor="lightgray" py={[12, 12, 24]}>
                <Box className="page-container">
                    <Heading maxW={640} mx="auto" mb={4} textAlign="center">
                        { Data.socialProof.title }
                    </Heading>

                    <Text
                        color="gray.600"
                        fontSize={['sm', 'sm', 'md', 'lg']}
                        maxW={800}
                        mx="auto"
                        textAlign="center"
                        lineHeight={1.8}
                    >
                        { Data.socialProof.body }
                    </Text>

                    <SimpleGrid columns={[2, 2, 2, 2, 3]} gap={[4, 4, 4, 12, 12]} mt={[12, 12, 16]} maxW={980} mx="auto">
                        {
                            Data.socialProof.proofs.map((proof) => (
                                <Card key={proof.caption} textAlign="center" bg="white" p={4}
                                    boxShadow="none"
                                    rounded="3xl"
                                >
                                    <CardBody p={[1, 1, 4, 8]}>
                                        <Heading color="primary" fontSize={['xl', '3xl']} mb={2}>
                                            { proof.data }
                                        </Heading>
                                        <Text fontSize={['xs', 'sm']} color="gray.600" mx={[0, 2]}>
                                            { proof.caption }
                                        </Text>
                                    </CardBody>
                                </Card>
                            ))
                        }
                    </SimpleGrid>

                    <Center mt={16}>
                        <Button onClick={() => openApp()} size="lg">
                            { Data.socialProof.cta }
                        </Button>
                    </Center>
                </Box>
            </Box>

            <Box>
                {
                    Data.snippets.map((snippet, i) => {
                        const even = i % 2 === 0
                        return (
                            <Flex
                                key={snippet.title}
                                className="page-container"
                                gap={[8, 8, 8, 8, 16]}
                                my={[16, 16, 24, 32]}
                                alignItems="center"
                                flexDir={even
                                    ? ['column', 'column', 'column', 'column', 'row-reverse']
                                    : ['column', 'column', 'column', 'column', 'row']
                                }
                            >
                                <Box w={['full', 'full', 'full', 'full', '50%']}>
                                    <Box maxW={570}>
                                        <Heading
                                            dangerouslySetInnerHTML={{
                                                __html: snippet.title
                                            }}
                                            mb={6}
                                            fontSize={['2xl', '2xl', '4xl']}
                                            lineHeight={[1.2, 1.2, 1.4]}
                                            maxW={460}
                                        />
        
                                        <Text
                                            dangerouslySetInnerHTML={{
                                                __html: snippet.body
                                            }}
                                            mb={[6, 6, 6, 6, 12]}
                                            fontSize={['sm', 'sm', 'lg', 'lg']}
                                            textAlign="justify"
                                            lineHeight={1.8}
                                        />

                                        {
                                            snippet.action === 'waitlist'
                                            ? (
                                                <NextLink href="?join-waitlist" passHref>
                                                    <Button as={Link} size="lg">
                                                        { snippet.cta }
                                                    </Button>
                                                </NextLink>
                                            ) : (
                                                <Button onClick={() => openApp()} size="lg">
                                                    { snippet.cta }
                                                </Button>
                                            )
                                        }
                                    </Box>
                                </Box>

                                <Box w={['full', 'full', 'full', 'full', '50%']}>
                                    <Image src={snippet.image} alt={snippet.title} />
                                </Box>

                            </Flex>
                        )
                    })
                }
            </Box>

            <WhyMusicSplit />

            <Artistes />

            <Box as="section" className="page-container" py={[2, 12, 24]}>
                <Heading mb={[0, 2]} fontSize={['2xl', '3xl']}>
                    What would you like to know?
                </Heading>
                <Heading mb={[8, 12]} className="primary-gradient-text" fontSize={['5xl', '5xl', '7xl']}>
                    FAQ
                </Heading>

                <Accordion maxW="2xl" allowToggle>
                    {
                        featuredFaqs.map((faq, i) => (
                            <FAQ key={`${faq.q}-${i}`} index={i} faq={faq} />
                        ))
                    }
                </Accordion>

                <Box mt={12}>
                    <NextLink href="/faq" passHref>
                        <Button as={Link} size="lg">
                            More FAQs
                        </Button>
                    </NextLink>
                </Box>
            </Box>
        </PageLayout>
    )
}

export default MusicSplitPage